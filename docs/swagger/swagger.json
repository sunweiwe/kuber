{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/v1/proxy/cluster/{cluster}/custom/alertmanager/v1/alerts": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "获取alertmanager中的告警数据",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Agent.V1"
                ],
                "summary": "获取alertmanager中的告警数据",
                "parameters": [
                    {
                        "type": "string",
                        "description": "cluster",
                        "name": "cluster",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "filter",
                        "name": "filter",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "receiver",
                        "name": "receiver",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "silenced",
                        "name": "silenced",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "inhibited",
                        "name": "inhibited",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "active",
                        "name": "active",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "unprocessed",
                        "name": "unprocessed",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "labelvalues",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.ResponseStruct"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/client.ExtendedAlert"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/v1/proxy/cluster/{cluster}/custom/batch/v1/namespaces/{namespace}/jobs": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "获取Job列表数据",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Agent.V1"
                ],
                "summary": "获取Job列表数据",
                "parameters": [
                    {
                        "type": "string",
                        "description": "page",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "cluster",
                        "name": "cluster",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "kind(cronjob)",
                        "name": "kind",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.ResponseStruct"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/pagination.Pagination"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "List": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/v1/proxy/cluster/{cluster}/custom/core/v1/namespaces/{namespace}/events": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "获取Event列表数据",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Agent.V1"
                ],
                "summary": "获取Event列表数据",
                "parameters": [
                    {
                        "type": "string",
                        "description": "page",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "cluster",
                        "name": "cluster",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "topkind",
                        "name": "kind",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "topname",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.ResponseStruct"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/pagination.Pagination"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "List": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/v1/proxy/cluster/{cluster}/custom/core/v1/namespaces/{namespace}/pods": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "获取Pod列表数据",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Agent.V1"
                ],
                "summary": "获取Pod列表数据",
                "parameters": [
                    {
                        "type": "string",
                        "description": "page",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "fieldSelector, 只支持podstatus={xxx}格式",
                        "name": "fieldSelector",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "cluster",
                        "name": "cluster",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "kind(Deployment,StatefulSet,DaemonSet,Job,Node)",
                        "name": "kind",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pod",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.ResponseStruct"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/pagination.Pagination"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "List": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/v1/proxy/cluster/{cluster}/custom/core/v1/namespaces/{namespace}/pods/{name}/actions/logs": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "实时获取日志STDOUT输出(websocket)",
                "tags": [
                    "Agent.V1"
                ],
                "summary": "实时获取日志STDOUT输出(websocket)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "cluster",
                        "name": "cluster",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "pod",
                        "name": "pod",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "container",
                        "name": "container",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "stream must be true",
                        "name": "stream",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "follow",
                        "name": "follow",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "tail line (default 1000)",
                        "name": "tail",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ws",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/v1/proxy/cluster/{cluster}/custom/core/v1/namespaces/{namespace}/pods/{name}/actions/shell": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "进入容器交互执行命令(websocket)",
                "tags": [
                    "Agent.V1"
                ],
                "summary": "进入容器交互执行命令(websocket)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "cluster",
                        "name": "cluster",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "pod",
                        "name": "pod",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "container",
                        "name": "container",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "stream must be true",
                        "name": "stream",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "default sh, choice(bash,ash,zsh)",
                        "name": "shell",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ws",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/v1/proxy/cluster/{cluster}/custom/core/v1/namespaces/{namespace}/pods/{name}/file": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "从容器下载文件",
                "tags": [
                    "Agent.V1"
                ],
                "summary": "从容器下载文件",
                "parameters": [
                    {
                        "type": "string",
                        "description": "cluster",
                        "name": "cluster",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "pod",
                        "name": "pod",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "container",
                        "name": "container",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "filename",
                        "name": "filename",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ws",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/v1/proxy/cluster/{cluster}/custom/core/v1/namespaces/{namespace}/pods/{name}/upfile": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "upload files to container",
                "tags": [
                    "Agent.V1"
                ],
                "summary": "upload files to container",
                "parameters": [
                    {
                        "type": "string",
                        "description": "cluster",
                        "name": "cluster",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "pod",
                        "name": "pod",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "container",
                        "name": "container",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "filename",
                        "name": "filename",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ws",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/v1/proxy/cluster/{cluster}/custom/core/v1/nodes/{name}": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "自定义的NODE详情接口,(可以获取资源分配情况)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Agent.V1"
                ],
                "summary": "自定义的NODE详情接口,(可以获取资源分配情况)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "cluster",
                        "name": "cluster",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Node",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.ResponseStruct"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Data": {
                                            "$ref": "#/definitions/apis.CustomNode"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/v1/proxy/cluster/{cluster}/custom/core/v1/nodes/{name}/actions/metadata": {
            "patch": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "修改node的元数据,label和annotations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Agent.V1"
                ],
                "summary": "修改node的元数据,label和annotations",
                "parameters": [
                    {
                        "description": "表单",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.metaForm"
                        }
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "cluster",
                        "name": "cluster",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Node",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.ResponseStruct"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/v1/proxy/cluster/{cluster}/custom/core/v1/nodes/{name}/actions/taint": {
            "patch": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "修改节点污点",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Agent.V1"
                ],
                "summary": "修改节点污点",
                "parameters": [
                    {
                        "description": "表单",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.taintForm"
                        }
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "cluster",
                        "name": "cluster",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Node",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.ResponseStruct"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/v1/proxy/cluster/{cluster}/custom/core/v1/{namespace}/pods/{name}/actions/debug": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "调试容器(websocket)",
                "tags": [
                    "Agent.V1"
                ],
                "summary": "调试容器(websocket)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "cluster",
                        "name": "cluster",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "pod name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "container",
                        "name": "container",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "must be true",
                        "name": "stream",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "agent",
                        "name": "agent",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "debug",
                        "name": "debug",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "fork",
                        "name": "fork",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ws",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/v1/proxy/cluster/{cluster}/custom/prometheus/v1/vector": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Prometheus Vector",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Agent.V1"
                ],
                "summary": "Prometheus Vector",
                "parameters": [
                    {
                        "type": "string",
                        "description": "cluster",
                        "name": "cluster",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "query",
                        "name": "query",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "nullable",
                        "name": "nullable",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "vector",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.ResponseStruct"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/v1/proxy/cluster/{cluster}/custom/statistics.system/v1/resources": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "获取集群级别资源统计",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Agent.V1"
                ],
                "summary": "获取集群级别资源统计",
                "parameters": [
                    {
                        "type": "string",
                        "description": "cluster",
                        "name": "cluster",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "counter",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.ResponseStruct"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/v1/proxy/cluster/{cluster}/custom/statistics.system/v1/workloads": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "获取集群内各种workload的统计",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Agent.V1"
                ],
                "summary": "获取集群内各种workload的统计",
                "parameters": [
                    {
                        "type": "string",
                        "description": "cluster",
                        "name": "cluster",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "counter",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.ResponseStruct"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/v1/proxy/cluster/{cluster}/custom/system/v1/kubectl": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "kubectl",
                "tags": [
                    "Agent.V1"
                ],
                "summary": "kubectl",
                "parameters": [
                    {
                        "type": "string",
                        "description": "cluster",
                        "name": "cluster",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "stream must be true",
                        "name": "stream",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ws",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/v1/proxy/cluster/{cluster}/{group}/{version}/namespaces/{namespace}/{resource}": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "获取namespaced scope workload  list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Agent.V1"
                ],
                "summary": "获取namespaced scope workload  list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "cluster",
                        "name": "cluster",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "group",
                        "name": "group",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "version",
                        "name": "version",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "resource",
                        "name": "resource",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "watch",
                        "name": "watch",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "counter",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.ResponseStruct"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/v1/proxy/cluster/{cluster}/{group}/{version}/namespaces/{namespace}/{resource}/{name}": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "获取namespaced scope workload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Agent.V1"
                ],
                "summary": "获取namespaced scope workload",
                "parameters": [
                    {
                        "type": "string",
                        "description": "cluster",
                        "name": "cluster",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "group",
                        "name": "group",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "version",
                        "name": "version",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "resoruce",
                        "name": "resource",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "counter",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.ResponseStruct"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "创建namespaced scope workload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Agent.V1"
                ],
                "summary": "创建namespaced scope workload",
                "parameters": [
                    {
                        "type": "string",
                        "description": "cluster",
                        "name": "cluster",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "group",
                        "name": "group",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "version",
                        "name": "version",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "resoruce",
                        "name": "resource",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "counter",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.ResponseStruct"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "创建 none namespaced scope workload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Agent.V1"
                ],
                "summary": "创建 none namespaced scope workload",
                "parameters": [
                    {
                        "type": "string",
                        "description": "cluster",
                        "name": "cluster",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "group",
                        "name": "group",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "version",
                        "name": "version",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "resoruce",
                        "name": "resource",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "counter",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.ResponseStruct"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "创建namespaced scope workload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Agent.V1"
                ],
                "summary": "创建namespaced scope workload",
                "parameters": [
                    {
                        "type": "string",
                        "description": "cluster",
                        "name": "cluster",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "group",
                        "name": "group",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "version",
                        "name": "version",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "resoruce",
                        "name": "resource",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "counter",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.ResponseStruct"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "创建namespaced scope workload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Agent.V1"
                ],
                "summary": "创建namespaced scope workload",
                "parameters": [
                    {
                        "type": "string",
                        "description": "cluster",
                        "name": "cluster",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "group",
                        "name": "group",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "version",
                        "name": "version",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "resoruce",
                        "name": "resource",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "counter",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.ResponseStruct"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/v1/proxy/cluster/{cluster}/{group}/{version}/namespaces/{namespace}/{resource}/{name}/actions/scale": {
            "patch": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "扩缩容",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Agent.V1"
                ],
                "summary": "扩缩容",
                "parameters": [
                    {
                        "type": "string",
                        "description": "cluster",
                        "name": "cluster",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "group",
                        "name": "group",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "version",
                        "name": "version",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "resoruce",
                        "name": "resource",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.scaleForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "counter",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.ResponseStruct"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "apis.CustomNode": {
            "type": "object",
            "properties": {
                "limits": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/resource.Quantity"
                    }
                },
                "node": {
                    "$ref": "#/definitions/v1.Node"
                },
                "requests": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/resource.Quantity"
                    }
                }
            }
        },
        "apis.metaForm": {
            "type": "object",
            "properties": {
                "annotations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "apis.scaleForm": {
            "type": "object",
            "properties": {
                "replicas": {
                    "type": "integer"
                }
            }
        },
        "apis.taintForm": {
            "type": "object",
            "properties": {
                "taints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.Taint"
                    }
                }
            }
        },
        "client.ExtendedAlert": {
            "type": "object",
            "properties": {
                "annotations": {
                    "$ref": "#/definitions/client.LabelSet"
                },
                "endsAt": {
                    "type": "string"
                },
                "fingerprint": {
                    "type": "string"
                },
                "generatorURL": {
                    "type": "string"
                },
                "labels": {
                    "$ref": "#/definitions/client.LabelSet"
                },
                "receivers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "startsAt": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/types.AlertStatus"
                }
            }
        },
        "client.LabelSet": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            }
        },
        "handlers.ResponseStruct": {
            "type": "object",
            "properties": {
                "data": {},
                "errorData": {},
                "message": {
                    "type": "string"
                }
            }
        },
        "pagination.Pagination": {
            "type": "object",
            "properties": {
                "current": {
                    "type": "integer"
                },
                "list": {},
                "size": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "resource.Quantity": {
            "type": "object",
            "properties": {
                "Format": {
                    "type": "string"
                }
            }
        },
        "types.AlertStatus": {
            "type": "object",
            "properties": {
                "inhibitedBy": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "silencedBy": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "state": {
                    "type": "string"
                }
            }
        },
        "v1.AttachedVolume": {
            "type": "object",
            "properties": {
                "devicePath": {
                    "description": "DevicePath represents the device path where the volume should be available",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the attached volume",
                    "type": "string"
                }
            }
        },
        "v1.ConfigMapNodeConfigSource": {
            "type": "object",
            "properties": {
                "kubeletConfigKey": {
                    "description": "KubeletConfigKey declares which key of the referenced ConfigMap corresponds to the KubeletConfiguration structure\nThis field is required in all cases.",
                    "type": "string"
                },
                "name": {
                    "description": "Name is the metadata.name of the referenced ConfigMap.\nThis field is required in all cases.",
                    "type": "string"
                },
                "namespace": {
                    "description": "Namespace is the metadata.namespace of the referenced ConfigMap.\nThis field is required in all cases.",
                    "type": "string"
                },
                "resourceVersion": {
                    "description": "ResourceVersion is the metadata.ResourceVersion of the referenced ConfigMap.\nThis field is forbidden in Node.Spec, and required in Node.Status.\n+optional",
                    "type": "string"
                },
                "uid": {
                    "description": "UID is the metadata.UID of the referenced ConfigMap.\nThis field is forbidden in Node.Spec, and required in Node.Status.\n+optional",
                    "type": "string"
                }
            }
        },
        "v1.ContainerImage": {
            "type": "object",
            "properties": {
                "names": {
                    "description": "Names by which this image is known.\ne.g. [\"kubernetes.example/hyperkube:v1.0.7\", \"cloud-vendor.registry.example/cloud-vendor/hyperkube:v1.0.7\"]\n+optional",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sizeBytes": {
                    "description": "The size of the image in bytes.\n+optional",
                    "type": "integer"
                }
            }
        },
        "v1.DaemonEndpoint": {
            "type": "object",
            "properties": {
                "Port": {
                    "description": "Port number of the given endpoint.",
                    "type": "integer"
                }
            }
        },
        "v1.FieldsV1": {
            "type": "object"
        },
        "v1.ManagedFieldsEntry": {
            "type": "object",
            "properties": {
                "apiVersion": {
                    "description": "APIVersion defines the version of this resource that this field set\napplies to. The format is \"group/version\" just like the top-level\nAPIVersion field. It is necessary to track the version of a field\nset because it cannot be automatically converted.",
                    "type": "string"
                },
                "fieldsType": {
                    "description": "FieldsType is the discriminator for the different fields format and version.\nThere is currently only one possible value: \"FieldsV1\"",
                    "type": "string"
                },
                "fieldsV1": {
                    "description": "FieldsV1 holds the first JSON version format as described in the \"FieldsV1\" type.\n+optional",
                    "$ref": "#/definitions/v1.FieldsV1"
                },
                "manager": {
                    "description": "Manager is an identifier of the workflow managing these fields.",
                    "type": "string"
                },
                "operation": {
                    "description": "Operation is the type of operation which lead to this ManagedFieldsEntry being created.\nThe only valid values for this field are 'Apply' and 'Update'.",
                    "type": "string"
                },
                "subresource": {
                    "description": "Subresource is the name of the subresource used to update that object, or\nempty string if the object was updated through the main resource. The\nvalue of this field is used to distinguish between managers, even if they\nshare the same name. For example, a status update will be distinct from a\nregular update using the same manager name.\nNote that the APIVersion field is not related to the Subresource field and\nit always corresponds to the version of the main resource.",
                    "type": "string"
                },
                "time": {
                    "description": "Time is the timestamp of when the ManagedFields entry was added. The\ntimestamp will also be updated if a field is added, the manager\nchanges any of the owned fields value or removes a field. The\ntimestamp does not update when a field is removed from the entry\nbecause another manager took it over.\n+optional",
                    "type": "string"
                }
            }
        },
        "v1.Node": {
            "type": "object",
            "properties": {
                "annotations": {
                    "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "apiVersion": {
                    "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n+optional",
                    "type": "string"
                },
                "creationTimestamp": {
                    "description": "CreationTimestamp is a timestamp representing the server time when this object was\ncreated. It is not guaranteed to be set in happens-before order across separate operations.\nClients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system.\nRead-only.\nNull for lists.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional",
                    "type": "string"
                },
                "deletionGracePeriodSeconds": {
                    "description": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional",
                    "type": "integer"
                },
                "deletionTimestamp": {
                    "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This\nfield is set by the server when a graceful deletion is requested by the user, and is not\ndirectly settable by a client. The resource is expected to be deleted (no longer visible\nfrom resource lists, and not reachable by name) after the time in this field, once the\nfinalizers list is empty. As long as the finalizers list contains items, deletion is blocked.\nOnce the deletionTimestamp is set, this value may not be unset or be set further into the\nfuture, although it may be shortened or the resource may be deleted prior to this time.\nFor example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react\nby sending a graceful termination signal to the containers in the pod. After that 30 seconds,\nthe Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,\nremove the pod from the API. In the presence of network partitions, this object may still\nexist after this timestamp, until an administrator or automated process can determine the\nresource is fully terminated.\nIf not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested.\nRead-only.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional",
                    "type": "string"
                },
                "finalizers": {
                    "description": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\nFinalizers may be processed and removed in any order.  Order is NOT enforced\nbecause it introduces significant risk of stuck finalizers.\nfinalizers is a shared field, any actor with permission can reorder it.\nIf the finalizer list is processed in order, then this can lead to a situation\nin which the component responsible for the first finalizer in the list is\nwaiting for a signal (field value, external system, or other) produced by a\ncomponent responsible for a finalizer later in the list, resulting in a deadlock.\nWithout enforced ordering finalizers are free to order amongst themselves and\nare not vulnerable to ordering changes in the list.\n+optional\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "generateName": {
                    "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will return a 409.\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n+optional",
                    "type": "string"
                },
                "generation": {
                    "description": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional",
                    "type": "integer"
                },
                "kind": {
                    "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n+optional",
                    "type": "string"
                },
                "labels": {
                    "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "managedFields": {
                    "description": "ManagedFields maps workflow-id and version to the set of fields\nthat are managed by that workflow. This is mostly for internal\nhousekeeping, and users typically shouldn't need to set or\nunderstand this field. A workflow can be the user's name, a\ncontroller's name, or the name of a specific apply path like\n\"ci-cd\". The set of fields is always in the version that the\nworkflow used when modifying the object.\n\n+optional",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.ManagedFieldsEntry"
                    }
                },
                "name": {
                    "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional",
                    "type": "string"
                },
                "namespace": {
                    "description": "Namespace defines the space within which each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional",
                    "type": "string"
                },
                "ownerReferences": {
                    "description": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.OwnerReference"
                    }
                },
                "resourceVersion": {
                    "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n+optional",
                    "type": "string"
                },
                "selfLink": {
                    "description": "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.\n+optional",
                    "type": "string"
                },
                "spec": {
                    "description": "Spec defines the behavior of a node.\nhttps://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status\n+optional",
                    "$ref": "#/definitions/v1.NodeSpec"
                },
                "status": {
                    "description": "Most recently observed status of the node.\nPopulated by the system.\nRead-only.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status\n+optional",
                    "$ref": "#/definitions/v1.NodeStatus"
                },
                "uid": {
                    "description": "UID is the unique in time and space value for this object. It is typically generated by\nthe server on successful creation of a resource and is not allowed to change on PUT\noperations.\n\nPopulated by the system.\nRead-only.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids\n+optional",
                    "type": "string"
                }
            }
        },
        "v1.NodeAddress": {
            "type": "object",
            "properties": {
                "address": {
                    "description": "The node address.",
                    "type": "string"
                },
                "type": {
                    "description": "Node address type, one of Hostname, ExternalIP or InternalIP.",
                    "type": "string"
                }
            }
        },
        "v1.NodeCondition": {
            "type": "object",
            "properties": {
                "lastHeartbeatTime": {
                    "description": "Last time we got an update on a given condition.\n+optional",
                    "type": "string"
                },
                "lastTransitionTime": {
                    "description": "Last time the condition transit from one status to another.\n+optional",
                    "type": "string"
                },
                "message": {
                    "description": "Human readable message indicating details about last transition.\n+optional",
                    "type": "string"
                },
                "reason": {
                    "description": "(brief) reason for the condition's last transition.\n+optional",
                    "type": "string"
                },
                "status": {
                    "description": "Status of the condition, one of True, False, Unknown.",
                    "type": "string"
                },
                "type": {
                    "description": "Type of node condition.",
                    "type": "string"
                }
            }
        },
        "v1.NodeConfigSource": {
            "type": "object",
            "properties": {
                "configMap": {
                    "description": "ConfigMap is a reference to a Node's ConfigMap",
                    "$ref": "#/definitions/v1.ConfigMapNodeConfigSource"
                }
            }
        },
        "v1.NodeConfigStatus": {
            "type": "object",
            "properties": {
                "active": {
                    "description": "Active reports the checkpointed config the node is actively using.\nActive will represent either the current version of the Assigned config,\nor the current LastKnownGood config, depending on whether attempting to use the\nAssigned config results in an error.\n+optional",
                    "$ref": "#/definitions/v1.NodeConfigSource"
                },
                "assigned": {
                    "description": "Assigned reports the checkpointed config the node will try to use.\nWhen Node.Spec.ConfigSource is updated, the node checkpoints the associated\nconfig payload to local disk, along with a record indicating intended\nconfig. The node refers to this record to choose its config checkpoint, and\nreports this record in Assigned. Assigned only updates in the status after\nthe record has been checkpointed to disk. When the Kubelet is restarted,\nit tries to make the Assigned config the Active config by loading and\nvalidating the checkpointed payload identified by Assigned.\n+optional",
                    "$ref": "#/definitions/v1.NodeConfigSource"
                },
                "error": {
                    "description": "Error describes any problems reconciling the Spec.ConfigSource to the Active config.\nErrors may occur, for example, attempting to checkpoint Spec.ConfigSource to the local Assigned\nrecord, attempting to checkpoint the payload associated with Spec.ConfigSource, attempting\nto load or validate the Assigned config, etc.\nErrors may occur at different points while syncing config. Earlier errors (e.g. download or\ncheckpointing errors) will not result in a rollback to LastKnownGood, and may resolve across\nKubelet retries. Later errors (e.g. loading or validating a checkpointed config) will result in\na rollback to LastKnownGood. In the latter case, it is usually possible to resolve the error\nby fixing the config assigned in Spec.ConfigSource.\nYou can find additional information for debugging by searching the error message in the Kubelet log.\nError is a human-readable description of the error state; machines can check whether or not Error\nis empty, but should not rely on the stability of the Error text across Kubelet versions.\n+optional",
                    "type": "string"
                },
                "lastKnownGood": {
                    "description": "LastKnownGood reports the checkpointed config the node will fall back to\nwhen it encounters an error attempting to use the Assigned config.\nThe Assigned config becomes the LastKnownGood config when the node determines\nthat the Assigned config is stable and correct.\nThis is currently implemented as a 10-minute soak period starting when the local\nrecord of Assigned config is updated. If the Assigned config is Active at the end\nof this period, it becomes the LastKnownGood. Note that if Spec.ConfigSource is\nreset to nil (use local defaults), the LastKnownGood is also immediately reset to nil,\nbecause the local default config is always assumed good.\nYou should not make assumptions about the node's method of determining config stability\nand correctness, as this may change or become configurable in the future.\n+optional",
                    "$ref": "#/definitions/v1.NodeConfigSource"
                }
            }
        },
        "v1.NodeDaemonEndpoints": {
            "type": "object",
            "properties": {
                "kubeletEndpoint": {
                    "description": "Endpoint on which Kubelet is listening.\n+optional",
                    "$ref": "#/definitions/v1.DaemonEndpoint"
                }
            }
        },
        "v1.NodeSpec": {
            "type": "object",
            "properties": {
                "configSource": {
                    "description": "Deprecated: Previously used to specify the source of the node's configuration for the DynamicKubeletConfig feature. This feature is removed.\n+optional",
                    "$ref": "#/definitions/v1.NodeConfigSource"
                },
                "externalID": {
                    "description": "Deprecated. Not all kubelets will set this field. Remove field after 1.13.\nsee: https://issues.k8s.io/61966\n+optional",
                    "type": "string"
                },
                "podCIDR": {
                    "description": "PodCIDR represents the pod IP range assigned to the node.\n+optional",
                    "type": "string"
                },
                "podCIDRs": {
                    "description": "podCIDRs represents the IP ranges assigned to the node for usage by Pods on that node. If this\nfield is specified, the 0th entry must match the podCIDR field. It may contain at most 1 value for\neach of IPv4 and IPv6.\n+optional\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "providerID": {
                    "description": "ID of the node assigned by the cloud provider in the format: \u003cProviderName\u003e://\u003cProviderSpecificNodeID\u003e\n+optional",
                    "type": "string"
                },
                "taints": {
                    "description": "If specified, the node's taints.\n+optional",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.Taint"
                    }
                },
                "unschedulable": {
                    "description": "Unschedulable controls node schedulability of new pods. By default, node is schedulable.\nMore info: https://kubernetes.io/docs/concepts/nodes/node/#manual-node-administration\n+optional",
                    "type": "boolean"
                }
            }
        },
        "v1.NodeStatus": {
            "type": "object",
            "properties": {
                "addresses": {
                    "description": "List of addresses reachable to the node.\nQueried from cloud provider, if available.\nMore info: https://kubernetes.io/docs/concepts/nodes/node/#addresses\nNote: This field is declared as mergeable, but the merge key is not sufficiently\nunique, which can cause data corruption when it is merged. Callers should instead\nuse a full-replacement patch. See https://pr.k8s.io/79391 for an example.\n+optional\n+patchMergeKey=type\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.NodeAddress"
                    }
                },
                "allocatable": {
                    "description": "Allocatable represents the resources of a node that are available for scheduling.\nDefaults to Capacity.\n+optional",
                    "$ref": "#/definitions/v1.ResourceList"
                },
                "capacity": {
                    "description": "Capacity represents the total resources of a node.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#capacity\n+optional",
                    "$ref": "#/definitions/v1.ResourceList"
                },
                "conditions": {
                    "description": "Conditions is an array of current observed node conditions.\nMore info: https://kubernetes.io/docs/concepts/nodes/node/#condition\n+optional\n+patchMergeKey=type\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.NodeCondition"
                    }
                },
                "config": {
                    "description": "Status of the config assigned to the node via the dynamic Kubelet config feature.\n+optional",
                    "$ref": "#/definitions/v1.NodeConfigStatus"
                },
                "daemonEndpoints": {
                    "description": "Endpoints of daemons running on the Node.\n+optional",
                    "$ref": "#/definitions/v1.NodeDaemonEndpoints"
                },
                "images": {
                    "description": "List of container images on this node\n+optional",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.ContainerImage"
                    }
                },
                "nodeInfo": {
                    "description": "Set of ids/uuids to uniquely identify the node.\nMore info: https://kubernetes.io/docs/concepts/nodes/node/#info\n+optional",
                    "$ref": "#/definitions/v1.NodeSystemInfo"
                },
                "phase": {
                    "description": "NodePhase is the recently observed lifecycle phase of the node.\nMore info: https://kubernetes.io/docs/concepts/nodes/node/#phase\nThe field is never populated, and now is deprecated.\n+optional",
                    "type": "string"
                },
                "volumesAttached": {
                    "description": "List of volumes that are attached to the node.\n+optional",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.AttachedVolume"
                    }
                },
                "volumesInUse": {
                    "description": "List of attachable volumes in use (mounted) by the node.\n+optional",
                    "type": "array",
                    "items": {
                        "description": "Name of the attached volume",
                        "type": "string"
                    }
                }
            }
        },
        "v1.NodeSystemInfo": {
            "type": "object",
            "properties": {
                "architecture": {
                    "description": "The Architecture reported by the node",
                    "type": "string"
                },
                "bootID": {
                    "description": "Boot ID reported by the node.",
                    "type": "string"
                },
                "containerRuntimeVersion": {
                    "description": "ContainerRuntime Version reported by the node through runtime remote API (e.g. containerd://1.4.2).",
                    "type": "string"
                },
                "kernelVersion": {
                    "description": "Kernel Version reported by the node from 'uname -r' (e.g. 3.16.0-0.bpo.4-amd64).",
                    "type": "string"
                },
                "kubeProxyVersion": {
                    "description": "KubeProxy Version reported by the node.",
                    "type": "string"
                },
                "kubeletVersion": {
                    "description": "Kubelet Version reported by the node.",
                    "type": "string"
                },
                "machineID": {
                    "description": "MachineID reported by the node. For unique machine identification\nin the cluster this field is preferred. Learn more from man(5)\nmachine-id: http://man7.org/linux/man-pages/man5/machine-id.5.html",
                    "type": "string"
                },
                "operatingSystem": {
                    "description": "The Operating System reported by the node",
                    "type": "string"
                },
                "osImage": {
                    "description": "OS Image reported by the node from /etc/os-release (e.g. Debian GNU/Linux 7 (wheezy)).",
                    "type": "string"
                },
                "systemUUID": {
                    "description": "SystemUUID reported by the node. For unique machine identification\nMachineID is preferred. This field is specific to Red Hat hosts\nhttps://access.redhat.com/documentation/en-us/red_hat_subscription_management/1/html/rhsm/uuid",
                    "type": "string"
                }
            }
        },
        "v1.OwnerReference": {
            "type": "object",
            "properties": {
                "apiVersion": {
                    "description": "API version of the referent.",
                    "type": "string"
                },
                "blockOwnerDeletion": {
                    "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then\nthe owner cannot be deleted from the key-value store until this\nreference is removed.\nSee https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion\nfor how the garbage collector interacts with this field and enforces the foreground deletion.\nDefaults to false.\nTo set this field, a user needs \"delete\" permission of the owner,\notherwise 422 (Unprocessable Entity) will be returned.\n+optional",
                    "type": "boolean"
                },
                "controller": {
                    "description": "If true, this reference points to the managing controller.\n+optional",
                    "type": "boolean"
                },
                "kind": {
                    "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the referent.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names",
                    "type": "string"
                },
                "uid": {
                    "description": "UID of the referent.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                    "type": "string"
                }
            }
        },
        "v1.ResourceList": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/definitions/resource.Quantity"
            }
        },
        "v1.Taint": {
            "type": "object",
            "properties": {
                "effect": {
                    "description": "Required. The effect of the taint on pods\nthat do not tolerate the taint.\nValid effects are NoSchedule, PreferNoSchedule and NoExecute.",
                    "type": "string"
                },
                "key": {
                    "description": "Required. The taint key to be applied to a node.",
                    "type": "string"
                },
                "timeAdded": {
                    "description": "TimeAdded represents the time at which the taint was added.\nIt is only written for NoExecute taints.\n+optional",
                    "type": "string"
                },
                "value": {
                    "description": "The taint value corresponding to the taint key.\n+optional",
                    "type": "string"
                }
            }
        }
    }
}